import os
import shutil
import subprocess

import magic
import prefect

from job import config


EXECUTABLE_TYPES = (
    "application/x-dosexec",
    "application/octet-stream",
    "application/x-executable"
)

SEVEN_ZIP = "/usr/bin/7z"
ZIP_MIME = ("application/x-7z-compressed",
            "application/zip"
            )

PASSWORD = "infected"


def is_bomb(filepath):
    # check if any individual file in an archive is bigger than a max size. Treat that as a zip bomb
    # this means that theoretically someone could make millions of smaller files, which we also check for
    command = [SEVEN_ZIP, "l", filepath, f"-p{PASSWORD}"]
    result = subprocess.check_output(command)
    result = result.decode("utf-8")
    num_files = 0
    seen_header = False
    for line in result.split("\n"):
        entries = line.split()
        if not entries:
            continue
        if entries[0].strip() == "Date":
            seen_header = True
            continue
        if len(entries) != 6:
            continue
        elif not seen_header:
            continue
        file_size = int(entries[3])
        if file_size > config.MAX_DECOMPRESSED_SIZE:
            return True
        num_files += 1
        if num_files > config.MAX_FILES:
            return True
    return False




@prefect.task(name="extract")
def extract(work_dir):
    if config.DEBUG:
        return
    logger = prefect.context.get("logger")
    for source in config.SOURCE_DIRECTORIES:
        logger.info(f"extracting {source}")
        for directory in config.SOURCE_DIRECTORIES[source]:
            output_dir = os.path.join(work_dir, source)
            if not os.path.exists(output_dir):
                os.makedirs(output_dir, exist_ok=True)
            full_path = os.path.join(config.BASE_DIR, directory)
            logger.info(f"looking at {full_path}")
            for root, dirs, files in os.walk(full_path):
                for archive in files:
                    file_path = os.path.join(root, archive)
                    with magic.Magic(flags=magic.MAGIC_MIME_TYPE) as m:
                        mime_type = m.id_filename(file_path)
                    if mime_type in EXECUTABLE_TYPES:
                        # copy file over to target straight
                        logger.info(f"copying executable {file_path}")
                        shutil.copy(str(file_path), str(os.path.join(output_dir, archive)))
                    elif mime_type in ZIP_MIME:
                        logger.info(f"extracting {file_path}")
                        try:
                            bomb = is_bomb(file_path)
                        except Exception:
                            logger.exception(f"failed to analyze {file_path}")
                            raise
                        if bomb:
                            logger.error(f"files too big, or too many files in {file_path}")
                            continue
                        subdir = os.path.join(output_dir, archive)
                        while os.path.exists(subdir):
                            subdir += "1"
                        os.makedirs(subdir)
                        command = [SEVEN_ZIP, "e", file_path, f"-o{subdir}", f"-p{PASSWORD}", "-y"]
                        try:
                            subprocess.run(command, check=True)
                        except subprocess.CalledProcessError:
                            # in some cases, like for files we downloaded from attackers directly, "infected"
                            # is not actually the password. Gotta skip those.
                            logger.exception(f"failed to extract file {file_path}")
